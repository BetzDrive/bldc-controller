load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")
load("//third_party:variables.bzl", "project_inc_paths")
load("//toolchains:platforms.bzl", "bootloader_binary", "gen_binary")
load("//toolchains:os_config.bzl", "os_config")
load("//toolchains:flash.bzl", "flash_remote")
load("@bazel_embedded//tools/openocd:defs.bzl", "openocd_flash")

bootloader_binary(
    name = "bootloader_raw",
    srcs = glob(["src/*.c"]) + glob(["src/*.cpp"]),
    copts = project_inc_paths,
    linkopts = [
        "-T $(location :link.ld)",
    ],
    target_compatible_with = [
        "@platforms//cpu:armv7e-m",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":link.ld",
        ":main_libs",
    ],
)

cc_library(
    name = "main_libs",
    hdrs = glob(
        ["include/*.h"],
        exclude = [
            "include/stm32f4xx_conf.h",
            "include/chconf.h",
            "include/halconf.h",
            "include/mcuconf.h",
        ],
    ) + glob(
        ["include/*.hpp"],
        exclude = [
            "include/peripherals.hpp",
        ],
    ),
    copts = project_inc_paths,
    includes = ["include"],
    deps = [
        "//common",
    ],
    alwayslink = True,
)

filegroup(
    name = "peripheral_config",
    srcs = ["include/peripherals.hpp"],
    visibility = ["//visibility:public"],
)

os_config(
    name = "os_config",
    # NOTE: This gets used by comms.cpp in common to enable the jump code path.
    defines = ["BOOTLOADER"],
    program = "bootloader",
)

gen_binary(
    name = "bootloader",
    src = ":bootloader_raw",
)

flash_remote(
    name = "upload",
    image = ":bootloader.bin",
    upload_type = "bootloader",
)

openocd_flash(
    name = "flash",
    device_configs = [
        "target/stm32f4x.cfg",
    ],
    image = ":bootloader.bin",
    interface_configs = [
        "interface/stlink.cfg",
    ],
)
